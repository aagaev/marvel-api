{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","noDescriptionMessage","str","slice","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoading","setState","onCharLoaded","onError","updateChar","min","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","i","console","log","forEach","item","classList","remove","add","focus","arr","onCharSelected","props","tabIndex","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.840d8472.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=1d72cee4813314a40e4eb983489bd6b7';\r\n    _baseOffset = 0;\r\n    getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status - ${res.status}`)\r\n        }\r\n\r\n        return await res.json()\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        //return this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\r\n        const res =  await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n       // console.log(res)\r\n        return res.data.results.map(this._transformCharacter)// передаем в map callback функцию которая будет трансформировать приходящие к ней элементы(айтемы). То есть будет переходить в методе map каждый отдельный объект по порядку  и уже будет возвращаться новый объект, а в конце получим новый массив с объектами \r\n        //return res.data.results.map(item => this._transformCharacter(item))\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        //return this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    noDescriptionMessage = (str) => str ? `${str.slice(0, 60)}...`  : str = 'Sorry but there is no description for this character. Please check Wiki page';\r\n    //onDecreasearr = (arr) => arr.length < 10 ? arr : arr.slice(0, 9);\r\n\r\n    _transformCharacter = (char) => {\r\n        return { \r\n            id: char.id,\r\n            name: char.name,\r\n            description: this.noDescriptionMessage(char.description),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n        style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n        src={img} \r\n        alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage.js';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png'\n\nclass RandomChar extends Component {\n   \n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        //this.timerId = setInterval(this.updateChar, 6000);\n    \n    }\n\n    componentWillUnmount() {\n        //clearInterval(this.timerId)\n        \n    }\n\n     onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, //char: char\n            loading: false\n        }) \n        //console.log(char)\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        }) \n    }\n\n    updateChar = () => {\n        this.onCharLoading();\n        const max = 1011400,\n              min = 1011000,\n             id = Math.floor(Math.random()*(max-min) + min);\n        \n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded) //когда мы используем промисы, цепочка через then идет, в функцию then приходит аргумент и когда внутри просто ссылка на функцию, то этот аргумент приходящий в then будет автоматически будет подставляться в метод this.onChatLoaded и затем запишеться внутрь стейта\n            .catch(this.onError)\n            // .then(res => {\n            //     this.setState(res)\n            // })\n           // console.log(id)\n    } \n    \n    \n    render() {\n    \n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(error || loading) ? <View char={char}/> : null;\n        //\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>  \n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true, //первая загрука первых 9 персонажей\n        error: false,\n        newItemLoading: false,//ручная загрузка потому изначально false\n        offset: 1541,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n  \n        this.onCharListLoading() //для первичной загрузки не важно, но в будущем когда будем вызывать по клику то состояние переключится и будем для кнопки устанавливать disabled\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n        this.setState(({charList, offset}) => ({\n                charList: [...charList, ...newCharList],//в первый раз когда компонент отрендерился charlist будет пустой массив\n                loading: false,\n                newItemLoading: false,\n                offset: offset + 9,\n                charEnded: ended \n            })) \n                 \n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref)\n    }\n    \n    focusOnItem = (i) => {\n        console.log(this.itemRefs)\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'))\n        this.itemRefs[i].classList.add('char__item_selected');\n        this.itemRefs[i].focus();\n\n    }\n\n    renderItems(arr) {\n        const {onCharSelected} = this.props;\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        onCharSelected(item.id);\n                        this.focusOnItem(i)\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                  \n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n \n    render() {\n        console.log(this.state.offset)\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                onClick={() => this.onRequest(offset)}\n                style={{'display': charEnded ? 'none' : 'block'}}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\n\n\n// const CharItems = ({chars}) => {\n//     return (\n//         chars.map(({name, thumbnail}) => {\n//             let imgStyle = {'objectFit': 'cover'};\n//             if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n//                 imgStyle = {'objectFit': 'contain'}\n//             }\n//             return (\n    \n//                 <li key={name} className=\"char__item\">\n//                     <img style={imgStyle} src={thumbnail} alt=\"abyss\"/>\n//                     <div className=\"char__name\">{name}</div>\n//                 </li>\n//             )\n//         })\n    \n//     )\n   \n// }\n\n// CharList.propTypes = {\n//     onCharSelected: PropTypes.func.isRequired\n// }\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\n\n\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props\n        if(!charId) {//for skeleton appearing&& first page loading\n            return\n        }\n\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, //char: char\n            loading: false\n        }) \n\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        }) \n    }\n\n   render() {\n    const {char, loading, error,} = this.state;\n    const skeleton = char || loading || error ? null  : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(error || loading || !char) ? <View char={char}/> : null;\n        return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n        )\n   }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    //console.log(comics)\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length === 0 ? 'There is no comics' : null}\n                {\n                    comics.map((item, i) => {\n                        if (i > 10) return\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}   \nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    \n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n// import MarvelService from './services/MarvelService';\n\n\n// const marvel = new MarvelService();\n//  marvel.getAllCharacters().then(res => console.log(res))\n\n// marvel.getCharacter(1011052).then(res => console.log(res))\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}